name: web test lab CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect:
    runs-on: ubuntu-latest
    
    outputs:
      python: ${{ steps.list-changes.outputs.python_projects }}
      java: ${{ steps.list-changes.outputs.java_projects }}
      javascript: ${{ steps.list-changes.outputs.javascript_projects }}
      other: ${{ steps.list-changes.outputs.other_files }}
    
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: list changes
        id: list-changes
        run: | 
          chmod +x .github/scripts/*
          .github/scripts/list-changes.sh "${{ github.event_name }}" "${{ github.event.pull_request.base.sha }}" "${{ github.sha }}"
  
  python-tests:
    needs: detect
    if: needs.detect.outputs.python != '[]'
    runs-on: ubuntu-latest

    env:
      THE_INTERNET_HOST: localhost
      THE_INTERNET_PORT: 7357
      BROWSER_NAME: chrome
      BROWSER_OPTIONS_CHROME:  --remote-allow-origins=*;--disable-gpu;--no-sandbox;--disable-dev-shm-usage;--headless=new;--window-size=1920,1080
      BROWSER_OPTIONS_FIREFOX: --headless=new
      BROWSER_OPTIONS_EDGE: --headless=new

    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.detect.outputs.python) }}
    
    services:
      the-internet:
        image: gprestes/the-internet
        ports:
          - 7357:5000
        options: >-
          --health-cmd "curl -f http://localhost:5000 || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version-file: "python/${{ matrix.project }}/.python-version"

      - name: install uv
        uses: astral-sh/setup-uv@v6

      - name: install dependencies
        working-directory: python/${{ matrix.project }}
        run: |
          uv sync

      - name: run tests
        working-directory: python/${{ matrix.project }}
        run: |
          chmod +x test.sh
          uv run -- ./test.sh

  java-tests:
    needs: detect
    if: needs.detect.outputs.java != '[]'
    runs-on: ubuntu-latest
    env:
      THE_INTERNET_HOST: localhost
      THE_INTERNET_PORT: 7357
      BROWSER_NAME: chrome
      BROWSER_OPTIONS_CHROME:  --remote-allow-origins=*;--disable-gpu;--no-sandbox;--disable-dev-shm-usage;--headless=new;--window-size=1920,1080
      BROWSER_OPTIONS_FIREFOX: --headless=new
      BROWSER_OPTIONS_EDGE: --headless=new

    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.detect.outputs.java) }}

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: set up java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: install dependencies
        working-directory: java/${{ matrix.project }}
        run: |
          mvn clean install

      - name: run tests
        working-directory: java/${{ matrix.project }}
        run: |
          mvn test
